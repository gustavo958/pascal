package pascalcompiler;
import java_cup.runtime.*;

parser code
{:
    public node elPadre;
    public boolean errorSintaxis = false;
    public void syntax_error(Symbol s) {
        errorSintaxis = true;
        System.out.print(" Error sintáctico en la línea " + (s.right+1) +" Columna "+s.left+ ". Identificador "
        +s.value + " no reconocido. " );
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        errorSintaxis = false;
        System.out.println("Error en la Línea " + (s.right+1)+ "Columna "+s.left+". Identificador " +
        s.value + " no reconocido. ");
    }
:}

terminal String PARRAY, PCARDINAL, PDOUBLE, PSHORTINT, PSMALLINT, PLONGINT, PINT64, PBYTE, PWORD, PLONGWORD, PCHARACTER, PREAL, PENUMERATED, PSTRING, PBOOLEAN, PINTEGER, PCHAR;
terminal String PIF, PTHEN, PELSE, PFOR, PDO, PWHILE, PCASE, PORELSE, PUNTIL, PREPEAT, PTO, PWITH, PANDTHEN;
terminal String PASIG, PMAS, PMENOS, PPOR, PENTRE, PMOD, PMOD2;
terminal String PDISTINTO, PCOMPARE, PMENOR, PMAYOR, PMENORIGUAL, PMAYORIGUAL, PBITWISEL, PBITWISER;
terminal String PXOR, PNOT, POR, PAND;
terminal String PBRACKETA, PBRACKETC, PPARA, PPARC, PPUNTOCOMA, PCOMENTARIOA, PCOMENTARIOC;
terminal String PTRUE, PFALSE, PNIL;
terminal String PPROGRAM, PBEGIN, PEND, PCLASS, PFUNCTION, PPROCEDURE, PRECORD;
terminal String PCONTINUE, PDOWNTO, PGOTO, PRETURN, PBREAK, PLABEL;
terminal String PDOSPUNTOS, PPOINTER, PDESDEHASTA, PCOMA;
terminal String PWRITELN, PREADLN;
terminal String PCONST, PDIV, PFILE, PVAR, PIN, POF, PPACKED, PSET, PTYPE, PSUBRANGE, PSHL, PSHR, PNEW;
terminal String PID, PNUMERO, PENTERO, PFLOTANTE, PTEXTO, PERROR;

non terminal String N_INICIA, S_INICIA, N_BLOQUE;

precedence left PORELSE, PANDTHEN;
precedence left PDISTINTO, PCOMPARE, PMENOR, PMAYOR, PMENORIGUAL, PMAYORIGUAL, PIN;
precedence left PMAS, PMENOS, POR;
precedence left PPOR, PENTRE, PMOD, PMOD2, PAND;
precedence left PNOT;

start with S_INICIA;

S_INICIA::= N_INICIA:ni {: System.out.println("INICIAL"); :};

N_INICIA::= PPROGRAM:pp PID:pd PPUNTOCOMA:pc PBEGIN:pb N_BLOQUE:bl PEND:pe {: System.out.println(pp+" - "+pd+" - "+pc+" - "+pb+" - BLOQUE - "+pe); :};

N_BLOQUE::= PWRITELN:wr PPARA:pa PTEXTO:pt PPARC:pr PPUNTOCOMA:pc {: System.out.println(wr+" - "+pa+" - "+pt+" - "+pr+" - "+pc); :};